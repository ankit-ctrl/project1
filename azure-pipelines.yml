# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

#trigger:
#- master

#pool:
#  vmImage: ubuntu-latest
#strategy:
#  matrix:
#    Python37:
#      python.version: '3.7'

#steps:
#- task: UsePythonVersion@0
#  inputs:
#    versionSpec: '$(python.version)'
#  displayName: 'Use Python $(python.version)'

#- script: |
#    python -m pip install --upgrade pip
#    pip install -r requirements.txt
#  displayName: 'Install dependencies'

#- task: PythonScript@0
#  inputs:
#    scriptSource: 'filePath'
#    scriptPath: 'demo.py'
#    failOnStderr: true'


steps:
  # Sets FOO to be "some value" in the script and the next ones
  - bash: |
      FOO="runtime value"
      echo "##vso[task.setvariable variable=FOO]$FOO"

  # Using the $() syntax during "compile time", the pipeline expands the variable
  - bash: |
      echo "$(FOO)"

  # Using an environment variable in the script context at "runtime", bash expands the variable
  - bash: |
      echo "$FOO"